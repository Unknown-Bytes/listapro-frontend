# Global configuration
global:
  environment: "{{ .Values.environment }}"

# Prometheus configuration
prometheus:
  enabled: true
  server:
    service:
      type: LoadBalancer
      port: 9090
      annotations:
        service.beta.kubernetes.io/do-loadbalancer-name: "listapro-{{ .Values.environment }}-prometheus-lb"
    persistentVolume:
      enabled: true
      size: 8Gi
    retention: "30d"
    
  # Prometheus configuration
  serverFiles:
    prometheus.yml:
      global:
        scrape_interval: 15s
        evaluation_interval: 15s
      
      rule_files:
        - "/etc/prometheus/rules/*.yml"
      
      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']
        
        - job_name: 'kubernetes-apiservers'
          kubernetes_sd_configs:
            - role: endpoints
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
            - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
              action: keep
              regex: default;kubernetes;https
        
        - job_name: 'kubernetes-nodes'
          kubernetes_sd_configs:
            - role: node
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
        
        - job_name: 'kubernetes-pods'
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: kubernetes_pod_name
        
        - job_name: 'listapro-app'
          static_configs:
            - targets: ['listapro-service:3000']
          metrics_path: '/api/metrics'
          scrape_interval: 30s

# Grafana configuration
grafana:
  enabled: true
  service:
    type: LoadBalancer
    port: 3001
    annotations:
      service.beta.kubernetes.io/do-loadbalancer-name: "listapro-{{ .Values.environment }}-grafana-lb"
  
  persistence:
    enabled: true
    size: 1Gi
  
  adminPassword: "{{ .Values.grafana.adminPassword }}"
  
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://{{ include "listapro-monitoring.fullname" . }}-prometheus-server:80
          access: proxy
          isDefault: true
  
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  
  dashboards:
    default:
      kubernetes-cluster:
        gnetId: 315
        revision: 3
        datasource: Prometheus
      kubernetes-pods:
        gnetId: 6417
        revision: 1
        datasource: Prometheus
      node-exporter:
        gnetId: 1860
        revision: 31
        datasource: Prometheus
      listapro-dashboard:
        json: |
          {
            "dashboard": {
              "id": null,
              "title": "ListaPro Application Dashboard",
              "tags": ["listapro"],
              "style": "dark",
              "timezone": "browser",
              "panels": [
                {
                  "id": 1,
                  "title": "Application Uptime",
                  "type": "stat",
                  "targets": [
                    {
                      "expr": "up{job=\"listapro-app\"}",
                      "legendFormat": "Uptime"
                    }
                  ],
                  "fieldConfig": {
                    "defaults": {
                      "color": {
                        "mode": "thresholds"
                      },
                      "thresholds": {
                        "steps": [
                          {
                            "color": "red",
                            "value": 0
                          },
                          {
                            "color": "green",
                            "value": 1
                          }
                        ]
                      }
                    }
                  },
                  "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 0
                  }
                },
                {
                  "id": 2,
                  "title": "CPU Usage",
                  "type": "graph",
                  "targets": [
                    {
                      "expr": "100 - (avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)",
                      "legendFormat": "CPU Usage %"
                    }
                  ],
                  "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 0
                  }
                },
                {
                  "id": 3,
                  "title": "Memory Usage",
                  "type": "graph",
                  "targets": [
                    {
                      "expr": "(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100",
                      "legendFormat": "Memory Usage %"
                    }
                  ],
                  "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 8
                  }
                },
                {
                  "id": 4,
                  "title": "Pod Status",
                  "type": "table",
                  "targets": [
                    {
                      "expr": "kube_pod_status_phase",
                      "legendFormat": "{{namespace}}/{{pod}} - {{phase}}"
                    }
                  ],
                  "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 8
                  }
                }
              ],
              "time": {
                "from": "now-1h",
                "to": "now"
              },
              "refresh": "30s"
            }
          }

# Node Exporter configuration
nodeExporter:
  enabled: true

# Default values
environment: "development"
