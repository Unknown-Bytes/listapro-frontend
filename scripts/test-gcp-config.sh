#!/bin/bash

# Script de verifica√ß√£o r√°pida da configura√ß√£o Terraform GCP
# Testa se a configura√ß√£o com data sources est√° funcionando

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç Verifica√ß√£o R√°pida - Terraform GCP${NC}"
echo "=================================================="

# Verificar se estamos no diret√≥rio correto
if [ ! -f "terraform/gcp/main.tf" ]; then
    echo -e "${RED}‚ùå Erro: Execute este script a partir da raiz do projeto${NC}"
    exit 1
fi

cd terraform/gcp

# Verificar se as vari√°veis necess√°rias est√£o definidas
if [ -z "$TF_VAR_project_id" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  TF_VAR_project_id n√£o definida. Por favor, defina:${NC}"
    echo "export TF_VAR_project_id=seu-project-id"
    exit 1
fi

echo -e "${BLUE}üìã Project ID: ${TF_VAR_project_id}${NC}"

# Inicializar Terraform se necess√°rio
if [ ! -d ".terraform" ]; then
    echo -e "${BLUE}üîß Inicializando Terraform...${NC}"
    terraform init
fi

# Validar configura√ß√£o
echo -e "${BLUE}‚úÖ Validando configura√ß√£o Terraform...${NC}"
if terraform validate; then
    echo -e "${GREEN}‚úÖ Configura√ß√£o Terraform v√°lida!${NC}"
else
    echo -e "${RED}‚ùå Erro na configura√ß√£o Terraform${NC}"
    exit 1
fi

# Fazer o plan
echo ""
echo -e "${BLUE}üìã Executando terraform plan...${NC}"
if terraform plan -out=tfplan-test; then
    echo -e "${GREEN}‚úÖ Plan executado com sucesso!${NC}"
    
    # Verificar se h√° recursos para criar
    PLAN_OUTPUT=$(terraform show -no-color tfplan-test)
    
    if echo "$PLAN_OUTPUT" | grep -q "No changes"; then
        echo -e "${GREEN}üéâ Perfeito! Nenhuma mudan√ßa necess√°ria.${NC}"
        echo -e "${GREEN}Todos os recursos j√° existem e est√£o sendo referenciados corretamente.${NC}"
    elif echo "$PLAN_OUTPUT" | grep -q "Plan:"; then
        echo ""
        echo -e "${BLUE}üìä Resumo das mudan√ßas:${NC}"
        echo "$PLAN_OUTPUT" | grep -A 5 "Plan:"
        echo ""
        echo -e "${YELLOW}üí° H√° recursos para criar/modificar. Execute apply quando estiver pronto.${NC}"
    fi
    
    # Limpar arquivo de plan de teste
    rm -f tfplan-test
    
else
    echo -e "${RED}‚ùå Erro no terraform plan${NC}"
    echo ""
    echo -e "${YELLOW}üí° Poss√≠veis solu√ß√µes:${NC}"
    echo "1. Execute: ./scripts/smart-deploy-gcp.sh"
    echo "2. Verifique se todas as vari√°veis de ambiente est√£o definidas"
    echo "3. Verifique se voc√™ tem permiss√µes no projeto GCP"
    
    exit 1
fi

echo ""
echo -e "${GREEN}‚úÖ Verifica√ß√£o conclu√≠da com sucesso!${NC}"
echo -e "${BLUE}üí° A configura√ß√£o est√° funcionando corretamente.${NC}"
